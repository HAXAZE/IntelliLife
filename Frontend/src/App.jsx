// src/App.jsx

import React, { useState, useEffect } from 'react';
import axios from 'axios';

function App() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [token, setToken] = useState('');
  const [command, setCommand] = useState('');
  const [autoGeneratedTodo, setAutoGeneratedTodo] = useState('');
  const [todos, setTodos] = useState([]);
  const [showSignup, setShowSignup] = useState(true);
  const [showLogin, setShowLogin] = useState(false);

  useEffect(() => {
    // Fetch existing todos on page load
    fetchTodos();
  }, [token]);

  const fetchTodos = () => {
    axios.get('http://localhost:3000/api/todos', {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    })
      .then(response => setTodos(response.data))
      .catch(error => console.error('Error fetching todos:', error));
  };

  const handleSignup = () => {
    axios.post('http://localhost:3000/api/signup', { username, password })
      .then(response => console.log(response.data))
      .catch(error => console.error('Error signing up:', error));
  };

  const handleLogin = () => {
    axios.post('http://localhost:3000/api/login', { username, password })
      .then(response => {
        setToken(response.data.token);
        console.log('Login successful');
      })
      .catch(error => console.error('Error logging in:', error));
  };

  const handleLogout = () => {
    setToken('');
    setUsername('');
    setPassword('');
    setCommand('');
    setAutoGeneratedTodo('');
    setTodos([]);
  };

  const handleCommandSubmit = () => {
    const commandParts = command.split(':');
    const action = commandParts[0].trim().toLowerCase();
    const taskDescription = commandParts[1] ? commandParts[1].trim() : '';

    if (action === 'create a todo' && taskDescription) {
      axios.post('http://localhost:3000/api/todos', { description: taskDescription }, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
        .then(response => {
          setAutoGeneratedTodo(`Todo created: ${response.data.description}`);
          fetchTodos(); // Refresh the todo list
        })
        .catch(error => console.error('Error creating todo:', error));
    } else {
      setAutoGeneratedTodo('Invalid command. Please use the format: "Create a todo: task description"');
    }
  };

  return (
    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '100vh' }}>
      <h1>IntelliLife Todo App</h1>

      <div>
        <button onClick={() => { setShowSignup(true); setShowLogin(false); }}>Signup</button>
        <button onClick={() => { setShowSignup(false); setShowLogin(true); }}>Login</button>
      </div>

      {showSignup && (
        <div>
          <h2>Signup</h2>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button onClick={handleSignup}>Signup</button>
        </div>
      )}

      {showLogin && (
        <div>
          <h2>Login</h2>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button onClick={handleLogin}>Login</button>
        </div>
      )}

      {token && (
        <div>
          <button onClick={handleLogout}>Logout</button>

          <div>
            <h2>Create Todo Command</h2>
            <input
              type="text"
              placeholder="Give a command (e.g., Create a todo: Buy groceries)"
              value={command}
              onChange={(e) => setCommand(e.target.value)}
            />
            <button onClick={handleCommandSubmit}>Submit Command</button>
            <p>{autoGeneratedTodo}</p>
          </div>

          <div>
            <h2>Todo List</h2>
            <ul>
              {todos.map((todo) => (
                <li key={todo._id}>
                  {todo.description}
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
